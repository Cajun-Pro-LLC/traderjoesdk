/*
Trader Joe Dex API

<p>Discover DeFi with Trader Joe, a leading decentralized exchange. Trade a wide variety of tokens, earn rewards, and engage in secure, peer-to-peer transactions. Trader Joe makes DeFi easy and accessible.

API version: 1.0.0
Contact: public-api@traderjoexyz.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package traderjoesdk

import (
	"encoding/json"
	"fmt"
)

// checks if the GetVault type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVault{}

// GetVault struct for GetVault
type GetVault struct {
	Address                  string            `json:"address"`
	Chain                    Chain             `json:"chain"`
	ChainId                  int32             `json:"chainId"`
	Name                     string            `json:"name"`
	Pair                     GetVaultPair      `json:"pair"`
	TokenX                   GetVaultToken     `json:"tokenX"`
	TokenY                   GetVaultToken     `json:"tokenY"`
	TokenX7DayPerformance    float32           `json:"tokenX7DayPerformance"`
	TokenY7DayPerformance    float32           `json:"tokenY7DayPerformance"`
	Hodl5050Performance      float32           `json:"hodl5050Performance"`
	TokenX30DayPerformance   float32           `json:"tokenX30DayPerformance"`
	TokenY30DayPerformance   float32           `json:"tokenY30DayPerformance"`
	Hodl30Day5050Performance float32           `json:"hodl30Day5050Performance"`
	Strategy                 *GetVaultStrategy `json:"strategy,omitempty"`
	AptPrice                 *float32          `json:"aptPrice,omitempty"`
	Apt1dPriceChange         float32           `json:"apt1dPriceChange"`
	TvlUsd                   float32           `json:"tvlUsd"`
	FeesUsd                  float32           `json:"feesUsd"`
	Apr1d                    float32           `json:"apr1d"`
	Farm                     *GetFarm          `json:"farm,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _GetVault GetVault

// NewGetVault instantiates a new GetVault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVault(address string, chain Chain, chainId int32, name string, pair GetVaultPair, tokenX GetVaultToken, tokenY GetVaultToken, tokenX7DayPerformance float32, tokenY7DayPerformance float32, hodl5050Performance float32, tokenX30DayPerformance float32, tokenY30DayPerformance float32, hodl30Day5050Performance float32, apt1dPriceChange float32, tvlUsd float32, feesUsd float32, apr1d float32) *GetVault {
	this := GetVault{}
	this.Address = address
	this.Chain = chain
	this.ChainId = chainId
	this.Name = name
	this.Pair = pair
	this.TokenX = tokenX
	this.TokenY = tokenY
	this.TokenX7DayPerformance = tokenX7DayPerformance
	this.TokenY7DayPerformance = tokenY7DayPerformance
	this.Hodl5050Performance = hodl5050Performance
	this.TokenX30DayPerformance = tokenX30DayPerformance
	this.TokenY30DayPerformance = tokenY30DayPerformance
	this.Hodl30Day5050Performance = hodl30Day5050Performance
	this.Apt1dPriceChange = apt1dPriceChange
	this.TvlUsd = tvlUsd
	this.FeesUsd = feesUsd
	this.Apr1d = apr1d
	return &this
}

// NewGetVaultWithDefaults instantiates a new GetVault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVaultWithDefaults() *GetVault {
	this := GetVault{}
	return &this
}

// GetAddress returns the Address field value
func (o *GetVault) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *GetVault) SetAddress(v string) {
	o.Address = v
}

// GetChain returns the Chain field value
func (o *GetVault) GetChain() Chain {
	if o == nil {
		var ret Chain
		return ret
	}

	return o.Chain
}

// GetChainOk returns a tuple with the Chain field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetChainOk() (*Chain, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chain, true
}

// SetChain sets field value
func (o *GetVault) SetChain(v Chain) {
	o.Chain = v
}

// GetChainId returns the ChainId field value
func (o *GetVault) GetChainId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetChainIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *GetVault) SetChainId(v int32) {
	o.ChainId = v
}

// GetName returns the Name field value
func (o *GetVault) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetVault) SetName(v string) {
	o.Name = v
}

// GetPair returns the Pair field value
func (o *GetVault) GetPair() GetVaultPair {
	if o == nil {
		var ret GetVaultPair
		return ret
	}

	return o.Pair
}

// GetPairOk returns a tuple with the Pair field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetPairOk() (*GetVaultPair, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pair, true
}

// SetPair sets field value
func (o *GetVault) SetPair(v GetVaultPair) {
	o.Pair = v
}

// GetTokenX returns the TokenX field value
func (o *GetVault) GetTokenX() GetVaultToken {
	if o == nil {
		var ret GetVaultToken
		return ret
	}

	return o.TokenX
}

// GetTokenXOk returns a tuple with the TokenX field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetTokenXOk() (*GetVaultToken, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenX, true
}

// SetTokenX sets field value
func (o *GetVault) SetTokenX(v GetVaultToken) {
	o.TokenX = v
}

// GetTokenY returns the TokenY field value
func (o *GetVault) GetTokenY() GetVaultToken {
	if o == nil {
		var ret GetVaultToken
		return ret
	}

	return o.TokenY
}

// GetTokenYOk returns a tuple with the TokenY field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetTokenYOk() (*GetVaultToken, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenY, true
}

// SetTokenY sets field value
func (o *GetVault) SetTokenY(v GetVaultToken) {
	o.TokenY = v
}

// GetTokenX7DayPerformance returns the TokenX7DayPerformance field value
func (o *GetVault) GetTokenX7DayPerformance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TokenX7DayPerformance
}

// GetTokenX7DayPerformanceOk returns a tuple with the TokenX7DayPerformance field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetTokenX7DayPerformanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenX7DayPerformance, true
}

// SetTokenX7DayPerformance sets field value
func (o *GetVault) SetTokenX7DayPerformance(v float32) {
	o.TokenX7DayPerformance = v
}

// GetTokenY7DayPerformance returns the TokenY7DayPerformance field value
func (o *GetVault) GetTokenY7DayPerformance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TokenY7DayPerformance
}

// GetTokenY7DayPerformanceOk returns a tuple with the TokenY7DayPerformance field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetTokenY7DayPerformanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenY7DayPerformance, true
}

// SetTokenY7DayPerformance sets field value
func (o *GetVault) SetTokenY7DayPerformance(v float32) {
	o.TokenY7DayPerformance = v
}

// GetHodl5050Performance returns the Hodl5050Performance field value
func (o *GetVault) GetHodl5050Performance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Hodl5050Performance
}

// GetHodl5050PerformanceOk returns a tuple with the Hodl5050Performance field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetHodl5050PerformanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hodl5050Performance, true
}

// SetHodl5050Performance sets field value
func (o *GetVault) SetHodl5050Performance(v float32) {
	o.Hodl5050Performance = v
}

// GetTokenX30DayPerformance returns the TokenX30DayPerformance field value
func (o *GetVault) GetTokenX30DayPerformance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TokenX30DayPerformance
}

// GetTokenX30DayPerformanceOk returns a tuple with the TokenX30DayPerformance field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetTokenX30DayPerformanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenX30DayPerformance, true
}

// SetTokenX30DayPerformance sets field value
func (o *GetVault) SetTokenX30DayPerformance(v float32) {
	o.TokenX30DayPerformance = v
}

// GetTokenY30DayPerformance returns the TokenY30DayPerformance field value
func (o *GetVault) GetTokenY30DayPerformance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TokenY30DayPerformance
}

// GetTokenY30DayPerformanceOk returns a tuple with the TokenY30DayPerformance field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetTokenY30DayPerformanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenY30DayPerformance, true
}

// SetTokenY30DayPerformance sets field value
func (o *GetVault) SetTokenY30DayPerformance(v float32) {
	o.TokenY30DayPerformance = v
}

// GetHodl30Day5050Performance returns the Hodl30Day5050Performance field value
func (o *GetVault) GetHodl30Day5050Performance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Hodl30Day5050Performance
}

// GetHodl30Day5050PerformanceOk returns a tuple with the Hodl30Day5050Performance field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetHodl30Day5050PerformanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hodl30Day5050Performance, true
}

// SetHodl30Day5050Performance sets field value
func (o *GetVault) SetHodl30Day5050Performance(v float32) {
	o.Hodl30Day5050Performance = v
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *GetVault) GetStrategy() GetVaultStrategy {
	if o == nil || IsNil(o.Strategy) {
		var ret GetVaultStrategy
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVault) GetStrategyOk() (*GetVaultStrategy, bool) {
	if o == nil || IsNil(o.Strategy) {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *GetVault) HasStrategy() bool {
	if o != nil && !IsNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given GetVaultStrategy and assigns it to the Strategy field.
func (o *GetVault) SetStrategy(v GetVaultStrategy) {
	o.Strategy = &v
}

// GetAptPrice returns the AptPrice field value if set, zero value otherwise.
func (o *GetVault) GetAptPrice() float32 {
	if o == nil || IsNil(o.AptPrice) {
		var ret float32
		return ret
	}
	return *o.AptPrice
}

// GetAptPriceOk returns a tuple with the AptPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVault) GetAptPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.AptPrice) {
		return nil, false
	}
	return o.AptPrice, true
}

// HasAptPrice returns a boolean if a field has been set.
func (o *GetVault) HasAptPrice() bool {
	if o != nil && !IsNil(o.AptPrice) {
		return true
	}

	return false
}

// SetAptPrice gets a reference to the given float32 and assigns it to the AptPrice field.
func (o *GetVault) SetAptPrice(v float32) {
	o.AptPrice = &v
}

// GetApt1dPriceChange returns the Apt1dPriceChange field value
func (o *GetVault) GetApt1dPriceChange() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Apt1dPriceChange
}

// GetApt1dPriceChangeOk returns a tuple with the Apt1dPriceChange field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetApt1dPriceChangeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Apt1dPriceChange, true
}

// SetApt1dPriceChange sets field value
func (o *GetVault) SetApt1dPriceChange(v float32) {
	o.Apt1dPriceChange = v
}

// GetTvlUsd returns the TvlUsd field value
func (o *GetVault) GetTvlUsd() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TvlUsd
}

// GetTvlUsdOk returns a tuple with the TvlUsd field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetTvlUsdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TvlUsd, true
}

// SetTvlUsd sets field value
func (o *GetVault) SetTvlUsd(v float32) {
	o.TvlUsd = v
}

// GetFeesUsd returns the FeesUsd field value
func (o *GetVault) GetFeesUsd() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FeesUsd
}

// GetFeesUsdOk returns a tuple with the FeesUsd field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetFeesUsdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeesUsd, true
}

// SetFeesUsd sets field value
func (o *GetVault) SetFeesUsd(v float32) {
	o.FeesUsd = v
}

// GetApr1d returns the Apr1d field value
func (o *GetVault) GetApr1d() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Apr1d
}

// GetApr1dOk returns a tuple with the Apr1d field value
// and a boolean to check if the value has been set.
func (o *GetVault) GetApr1dOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Apr1d, true
}

// SetApr1d sets field value
func (o *GetVault) SetApr1d(v float32) {
	o.Apr1d = v
}

// GetFarm returns the Farm field value if set, zero value otherwise.
func (o *GetVault) GetFarm() GetFarm {
	if o == nil || IsNil(o.Farm) {
		var ret GetFarm
		return ret
	}
	return *o.Farm
}

// GetFarmOk returns a tuple with the Farm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVault) GetFarmOk() (*GetFarm, bool) {
	if o == nil || IsNil(o.Farm) {
		return nil, false
	}
	return o.Farm, true
}

// HasFarm returns a boolean if a field has been set.
func (o *GetVault) HasFarm() bool {
	if o != nil && !IsNil(o.Farm) {
		return true
	}

	return false
}

// SetFarm gets a reference to the given GetFarm and assigns it to the Farm field.
func (o *GetVault) SetFarm(v GetFarm) {
	o.Farm = &v
}

func (o GetVault) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVault) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["chain"] = o.Chain
	toSerialize["chainId"] = o.ChainId
	toSerialize["name"] = o.Name
	toSerialize["pair"] = o.Pair
	toSerialize["tokenX"] = o.TokenX
	toSerialize["tokenY"] = o.TokenY
	toSerialize["tokenX7DayPerformance"] = o.TokenX7DayPerformance
	toSerialize["tokenY7DayPerformance"] = o.TokenY7DayPerformance
	toSerialize["hodl5050Performance"] = o.Hodl5050Performance
	toSerialize["tokenX30DayPerformance"] = o.TokenX30DayPerformance
	toSerialize["tokenY30DayPerformance"] = o.TokenY30DayPerformance
	toSerialize["hodl30Day5050Performance"] = o.Hodl30Day5050Performance
	if !IsNil(o.Strategy) {
		toSerialize["strategy"] = o.Strategy
	}
	if !IsNil(o.AptPrice) {
		toSerialize["aptPrice"] = o.AptPrice
	}
	toSerialize["apt1dPriceChange"] = o.Apt1dPriceChange
	toSerialize["tvlUsd"] = o.TvlUsd
	toSerialize["feesUsd"] = o.FeesUsd
	toSerialize["apr1d"] = o.Apr1d
	if !IsNil(o.Farm) {
		toSerialize["farm"] = o.Farm
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetVault) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"chain",
		"chainId",
		"name",
		"pair",
		"tokenX",
		"tokenY",
		"tokenX7DayPerformance",
		"tokenY7DayPerformance",
		"hodl5050Performance",
		"tokenX30DayPerformance",
		"tokenY30DayPerformance",
		"hodl30Day5050Performance",
		"apt1dPriceChange",
		"tvlUsd",
		"feesUsd",
		"apr1d",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetVault := _GetVault{}

	err = json.Unmarshal(data, &varGetVault)

	if err != nil {
		return err
	}

	*o = GetVault(varGetVault)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "chain")
		delete(additionalProperties, "chainId")
		delete(additionalProperties, "name")
		delete(additionalProperties, "pair")
		delete(additionalProperties, "tokenX")
		delete(additionalProperties, "tokenY")
		delete(additionalProperties, "tokenX7DayPerformance")
		delete(additionalProperties, "tokenY7DayPerformance")
		delete(additionalProperties, "hodl5050Performance")
		delete(additionalProperties, "tokenX30DayPerformance")
		delete(additionalProperties, "tokenY30DayPerformance")
		delete(additionalProperties, "hodl30Day5050Performance")
		delete(additionalProperties, "strategy")
		delete(additionalProperties, "aptPrice")
		delete(additionalProperties, "apt1dPriceChange")
		delete(additionalProperties, "tvlUsd")
		delete(additionalProperties, "feesUsd")
		delete(additionalProperties, "apr1d")
		delete(additionalProperties, "farm")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetVault struct {
	value *GetVault
	isSet bool
}

func (v NullableGetVault) Get() *GetVault {
	return v.value
}

func (v *NullableGetVault) Set(val *GetVault) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVault) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVault(val *GetVault) *NullableGetVault {
	return &NullableGetVault{value: val, isSet: true}
}

func (v NullableGetVault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
